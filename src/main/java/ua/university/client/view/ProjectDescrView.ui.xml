<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder
        xmlns:ui='urn:ui:com.google.gwt.uibinder'
        xmlns:g='urn:import:com.google.gwt.user.client.ui'>

    <ui:style>
        .Header1 {
            font-size: large;
            font-weight: bold;
        }

        .Header2 {
            font-weight: bold;
        }

        .LeftSideMenuSelected {
            color: lightslategrey;
        }
    </ui:style>

    <g:RootLayoutPanel>
        <g:layer>
            <g:DockLayoutPanel>
                <g:north size='30' styleName="">
                    <g:Label text="Univerity Project" addStyleNames="{style.Header1}"/>
                </g:north>
                <g:west size='150'>
                    <g:VerticalPanel spacing="10">
                        <g:Hyperlink text="Project description" addStyleNames="{style.LeftSideMenuSelected}"/>
                        <g:Hyperlink text="Teachers" ui:field="switchToTeacherView"/>
                        <g:Hyperlink text="Students" ui:field="switchToStudentView"/>
                        <g:Hyperlink text="Subjects dictionary" ui:field="switchToRefSubjectView"/>
                        <g:Hyperlink text="Clubs dictionary" ui:field="switchToRefClubView"/>
                    </g:VerticalPanel>
                </g:west>
                <g:center>
                    <g:HTMLPanel>
                        <html>
                            <body>
                                <p></p>
                                <p>В университете есть студенты и преподаватели (у них есть общие поля имя, фамилия, год
                                    рождения), но у преподавателей есть дополнительно дожность, а у студентов – к какому
                                    клубу они относятся. Также есть список изучаемых предметов.
                                </p>
                                <p>
                                    Поднять это всё на Spring, Hibernate как реализации JPA
                                </p>
                                <p>Отношения:
                                    <ul>
                                        <li>- Преподаватель знает один предмет, предмет могут знать многие преподаватели
                                            (Many-To-One, One-To-Many)
                                        </li>
                                        <li>- Студенты изучают разные предметы (Many-To-Many)</li>
                                        <li>- Студенты состоят в различных клубах (Many-To-Many)</li>
                                    </ul>
                                </p>
                                <p>Функциональность:
                                    <ul>

                                        <li>- Поиск по студентов и преподавателей заданным атрибутам (CriteriaAPI,
                                            CriteriaBuilder)
                                        </li>
                                        <li>- CRUD-операции (JPA, Spring DATA, HQL)</li>
                                        <li>- UI (GWT: UiBinder, MVP)</li>
                                    </ul>
                                </p>
                            </body>
                        </html>
                    </g:HTMLPanel>
                </g:center>
            </g:DockLayoutPanel>
        </g:layer>
    </g:RootLayoutPanel>
</ui:UiBinder>